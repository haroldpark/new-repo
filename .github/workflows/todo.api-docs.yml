# Key Components:

# OpenAPI Specification Generation - Multiple approaches using swagger-jsdoc or express-openapi-generator to automatically generate specs from your JavaScript code
# Detailed JSDoc Documentation - Comprehensive examples showing how to document routes, schemas, parameters, responses, and security requirements
# Scalar Integration Options:

# CDN integration for simple setup
# Express route integration
# Standalone documentation server

# Automated CI/CD Pipeline - GitHub Actions workflow that generates, validates, and deploys documentation automatically
# Advanced Customization - Custom themes, styling, and configuration options for branding
# Quality Assurance - Validation scripts to ensure documentation completeness and accuracy

# name: Generate and Deploy API Documentation

# on:
#   push:
#     branches: [main, develop]
#   pull_request:
#     branches: [main]

# jobs:
#   generate-docs:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Start API server
#         run: |
#           npm start &
#           sleep 10  # Wait for server to start
#         env:
#           NODE_ENV: production

#       - name: Generate OpenAPI spec
#         run: |
#           curl -o openapi.json http://localhost:3000/api-docs.json

#       - name: Validate OpenAPI spec
#         run: |
#           npx @apidevtools/swagger-parser validate openapi.json

#       - name: Generate static Scalar docs
#         run: |
#           npx @scalar/cli export openapi.json --output docs/

#       - name: Upload documentation artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: api-docs
#           path: docs/

# deploy-docs:
#   needs: generate-docs
#   runs-on: ubuntu-latest
#   if: github.ref == 'refs/heads/main'

#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Download documentation artifacts
#       uses: actions/download-artifact@v3
#       with:
#         name: api-docs
#         path: docs/

#     - name: Deploy to GitHub Pages
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ./docs
#         cname: docs.yourapi.com # Optional custom domain
