name: Compress Images

on:
  push:
    paths:
      - 'assets/**'

permissions:
  contents: write

jobs:
  optimize-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # full history so rebase works

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure branch up-to-date
        run: |
          git fetch origin main
          git rebase origin/main || true

      - name: Install image optimization tools
        run: |
          sudo apt-get update
          sudo apt-get install -y pngquant jpegoptim gifsicle

      - name: Optimize images
        run: |
          find assets -type f -name "*.png"  -exec pngquant --force --ext .png {} \;
          find assets -type f -name "*.jpg"  -exec jpegoptim --strip-all {} \;
          find assets -type f -name "*.jpeg" -exec jpegoptim --strip-all {} \;
          find assets -type f -name "*.gif"  -exec gifsicle -b -O3 {} \;

      - name: Commit & push optimized images
        run: |
          git add -A assets
          if git diff --cached --quiet; then
            echo "No image changes to commit."
            exit 0
          fi
          git commit -m "chore: optimize images"
          # Re-fetch remote and rebase our commit on top of any new remote commits
          git fetch origin main
          git rebase origin/main || {
            echo "Rebase after commit failed; aborting to avoid pushing broken history."
            git rebase --abort || true
            exit 1
          }
          git push origin HEAD:main
